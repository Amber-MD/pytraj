\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename pytraj.info
@documentencoding UTF-8
@ifinfo
@*Generated by Sphinx 1.3.1.@*
@end ifinfo
@settitle pytraj Documentation
@defindex ge
@paragraphindent 0
@exampleindent 4
@finalout
@dircategory Miscellaneous
@direntry
* pytraj: (pytraj.info). One line description of project.
@end direntry

@definfoenclose strong,`,'
@definfoenclose emph,`,'
@c %**end of header

@copying
@quotation
pytraj 0.1.2.dev5, August 07, 2015

Hai Nguyen

Copyright @copyright{} 2015, Hai Nguyen
@end quotation

@end copying

@titlepage
@title pytraj Documentation
@insertcopying
@end titlepage
@contents

@c %** start of user preamble

@c %** end of user preamble

@ifnottex
@node Top
@top pytraj Documentation
@insertcopying
@end ifnottex

@c %**start of body
@anchor{index doc}@anchor{0}
@c pytraj documentation master file, created by
@c sphinx-quickstart on Mon Jun 22 19:09:20 2015.
@c You can adapt this file completely to your liking, but it should at least
@c contain the root `toctree` directive.

Contents:

@menu
* Installation:: 
* Basic examples:: 
* Trajectory:: 
* Atom mask selection:: 
* Frequently Asked Questions:: 
* Parallel calculation:: 
* What's new?:: 
* Developer guide:: 
* Misc:: 
* Indices and tables:: 

@end menu

@node Installation,Basic examples,Top,Top
@anchor{installation installation}@anchor{1}@anchor{installation doc}@anchor{2}@anchor{installation welcome-to-pytraj-s-documentation}@anchor{3}
@chapter Installation


@example
git clone https://github.com/Amber-MD/pytraj
cd pytraj
python ./setup.py install
@end example

@example
conda install -c pytraj pytraj-dev --force
@end example

@node Basic examples,Trajectory,Installation,Top
@anchor{basic_examples doc}@anchor{4}@anchor{basic_examples basic-examples}@anchor{5}
@chapter Basic examples


@node Trajectory,Atom mask selection,Basic examples,Top
@anchor{trajectory trajectory}@anchor{6}@anchor{trajectory doc}@anchor{7}
@chapter Trajectory


@code{TrajectoryIterator} is work-horse of @code{pytraj}. This class offers out-of-core data store with easiness to load data to memory.

@example
>>> import pytraj as pt
>>> traj = pt.iterload('./tz2.nc', './tz2.parm7')
>>> traj
<pytraj.TrajectoryIterator with 101 frames:
<Topology with 223 atoms, 13 residues, 1 mols, 230 bonds, non-PBC>>
>>> pt.rmsd(traj, ref=0, mask='@@CA')
array([  1.94667955e-07,   2.54596866e+00,   4.22333034e+00, ...,
         4.97189564e+00,   5.53947712e+00,   4.83201237e+00])
@end example

@menu
* Slice trajectory:: 
* iterload:: 

@end menu

@node Slice trajectory,iterload,,Trajectory
@anchor{slice doc}@anchor{8}@anchor{slice slice-trajectory}@anchor{9}
@section Slice trajectory


@node iterload,,Slice trajectory,Trajectory
@anchor{load_file doc}@anchor{a}@anchor{load_file iterload}@anchor{b}
@section iterload


@node Atom mask selection,Frequently Asked Questions,Trajectory,Top
@anchor{atom_selection doc}@anchor{c}@anchor{atom_selection atom-mask-selection}@anchor{d}
@chapter Atom mask selection


@node Frequently Asked Questions,Parallel calculation,Atom mask selection,Top
@anchor{faq doc}@anchor{e}@anchor{faq frequently-asked-questions}@anchor{f}
@chapter Frequently Asked Questions


@node Parallel calculation,What's new?,Frequently Asked Questions,Top
@anchor{parallel parallel-calculation}@anchor{10}@anchor{parallel doc}@anchor{11}
@chapter Parallel calculation


@node What's new?,Developer guide,Parallel calculation,Top
@anchor{whatsnew doc}@anchor{12}@anchor{whatsnew what-s-new}@anchor{13}
@chapter What's new?


@node Developer guide,Misc,What's new?,Top
@anchor{developer_guide doc}@anchor{14}@anchor{developer_guide developer-guide}@anchor{15}
@chapter Developer guide


@node Misc,Indices and tables,Developer guide,Top
@anchor{misc doc}@anchor{16}@anchor{misc misc}@anchor{17}
@chapter Misc


@node Indices and tables,,Misc,Top
@anchor{index indices-and-tables}@anchor{18}
@unnumbered Indices and tables



@itemize *

@item 
genindex

@item 
modindex

@item 
search
@end itemize

@c %**end of body
@bye
